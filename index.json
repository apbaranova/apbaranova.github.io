[{"authors":null,"categories":null,"content":"Anastasia Baranova is a student at RUDN. Her research interests are distributed robotics, mobile computing and programmable matter.\n  Download my resumé.\n","date":1653696000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1653696000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Anastasia Baranova is a student at RUDN. Her research interests are distributed robotics, mobile computing and programmable matter.\n  Download my resumé.","tags":null,"title":"Anastasia Baranova","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"About My Previous Week I spent my previous week doing labs for Operating Systems and stuudying for my English test. It was very hard. I hope I will keep doing well in studying.\n","date":1653696000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653696000,"objectID":"1f4c625fd509c8cb683244e186e4ef33","permalink":"https://example.com/post/my-week04/","publishdate":"2022-05-28T00:00:00Z","relpermalink":"/post/my-week04/","section":"post","summary":"This chapter will be about my previous week.","tags":["Academic"],"title":"About my previous week","type":"post"},{"authors":null,"categories":null,"content":"Pater noster, qui es in caelis Sanctificetur nomen tuum Adveniat regnum tuum Fiat voluntas tua, sicut in caelo, et in terra Panem nostrum cotidianum da nobis hodie Et dimitte nobis debita nostra Sicut et nos dimittimus debitoribus nostris Et ne nos inducas in tentationem Sed libera nos a malo Quia tuum est regnum et potestas et gloria In saecula Amen\nSacramentum nocturnarum Nefarious Sacramentum nocturnarum Nefarious Oremus Deus Sanctus, Deum, Filium Dominum martyrum Oremus convertere apostolicus Cedere animus Debitus et catholicus Debere deum animalum Dominum et imperitum Here we are E nomine Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night Oremus Deus Sanctus, Deum, Filium Dominum martyrum Oremus convertere apostolicus Cedere animus Debitus et catholicus Debere deum animalum Dominum et imperitum Here we are E nomine Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night E nomine Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night Sanctus Dominus, halleluja Christus animus, halleluja Et Sanctus Spiritus, call me in the night\nAve Maria, gratia plena, Dominus tecum. Benedicta tu in mulieribus, et benedictus fructus ventris tui, Iesus.\nSancta Maria, Mater Dei, ora pro nobis peccatoribus nunc et in hora mortis nostrae.\nAmen.\n","date":1653696000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653696000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2022-05-28T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"My example of using the in-built project page.","tags":["Learn with me"],"title":"My Example Project","type":"project"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"Fortran Fortran is the language of the past in scientific computation, and one of the main languages of the present, as far as physics is concerned. Its main strengths at the moment are\n a huge body of well-debugged and working code available; a large base of experience residing in “older” physicists (pretty much all of us over the age of thirty?); ease of use.  The last point is perhaps the most important, as Fortran has a “model” of the computer which is simple enough that one does not have to be a professional (i.e., extensive training or self-education in computer science or programming) to produce a reasonable Fortran program.\nThis is not to say that it is not possible to produce a bad Fortran program. It is quite easy, but that is true of pretty much every computer language to some degree.\nFortran 90 extends fortran in several useful ways, and makes it a more modern programming language, while retaining full compatibility with Fortran-77 code. Two of the more interesting features are aggregrate data types (“structures”) and built-in operations on arrays and matrices. In my opinion, Fortran tends to lose big as projects get more complex. The support for reuse and encapsulation of code is fairly poor in Fortran, at least in Fortran-77. Fortran 90 has more support for this, but I have little experience with it. Also, most graphical-interface and visualization packages have no native Fortran support.\nSome Fortran 90 proponents would like to see some of the “dangerous” elements of Fortran-77 removed from the language. I think this is a bad idea. Go here to read why I think so.\nC and C++ C is an interesting choice as a scientific language. It is extremely flexible and available on about every machine known to man. Also, one of the best C compilers (gcc) is available for free. Almost all visualization and user-interface packages support the C language. C is frequently taught as a first or second language in university computer-science departments.\nA long-standing gripe about C is that it produces slower code than does the equivalent Fortran. Nowadays, computer speeds are doubling every year or so, and C compilers don’t seem to be doing that bad compared to Fortran anymore (typical C code runs between 50 and 100% as fast as the equivalent Fortran, depending on the application). In light of this, I think it’s hard to discard C on the basis of the speed of the code it produces.\nNevertheless, I don’t think it’s a good scientific programming language. The C language is fairly close to the hardware, and it is quite easy to make big mistakes in coding an application. These mistakes often don’t display themselves in small test cases, since they involve memory-management issues and the like. Also, programming large applications in C requires some degree of professionalism, meaning a fairly deep grasp of the language. As such, it is a bad language for mainstream scientific programming; typically only the creator of a program, or people with real expertise in computer programming, will be able to understand a large C application unless it is very carefully written.\nI believe these comments also apply to C++ coding. The concerns about readability and professionalism apply perhaps even more strongly here than for “just C”. C++ has the advantage of being the most-popular object-oriented language, but it is also recognized as being a fairly cryptic one. Again, a certain degree of professionalism is necessary to program a C++ application which is understandable to others. Packages which automatically generate C++ code from user-specified pseudocode help alleviate the problem, but then we are faced with asking all users to use the same C++ generator, which is another problem of the same magnitude.\nThe above two are the “traditional” choices. I now turn to newer languages which are less well known in the scientific community.\nPython Python is an object-oriented, extensible, interpreted language. It runs on essentially all Unix systems, as well as on DOS/Windows platforms and on the Mac. It is free and comes with complete source code. It is very easy to begin using Python — at a simple level, it resembles Basic and can be used interactively in the same way as Basic. However, it supports object methods and “scales” nicely. Scaling indicates the relative difficulty of writing small vs. large applications. The object facilities help and encourage one to write an application in small pieces. These small pieces can be put together to make the big program, and the small pieces can also be used in other applications.\nAnother advantage of Python is its extensibility. One can write an object library in C, C++, or native Python, which can then either be dynamically or statically linked with the main Python system and used in Python programs. One can use this to make a programmable application, such as a data-plotting package. One would add a package to the interpreter which contained commands to set up your plots and to actually plot …","date":1653696000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653696000,"objectID":"bb7150073646bc096e911f12dc20e5fa","permalink":"https://example.com/post/post4/","publishdate":"2022-05-28T00:00:00Z","relpermalink":"/post/post4/","section":"post","summary":"As computers become more ubiquitous in physics research (and scientific research in general), the issue of which programming languages to use becomes more important. Factors which especially influence the importance of this question are the increasing complexity of the tasks being programmed; the increasing complexity and diversity of the machines being programmed; the increasing use of graphical visualization and interfacing to scientific programs; and the increasing number of the programming languages available in which to program.","tags":["Academic"],"title":"Scientific Programming Languages","type":"post"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"About My Previous Week I spent my previous week doing labs for Operating Systems and for Programming Technologies. It was very hard. I hope I will keep doing well in studying.\n","date":1653004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653004800,"objectID":"20597200341a573fc280484a322a294d","permalink":"https://example.com/post/my-week03/","publishdate":"2022-05-20T00:00:00Z","relpermalink":"/post/my-week03/","section":"post","summary":"This chapter will be about my previous week.","tags":["Academic"],"title":"About my previous week","type":"post"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"Требования К основным требованиям по оформлению отчета по практике по ГОСТу 2022 года относят:\n  Размер и тип шрифта: обычно это 14 или 12 кегль, тип шрифта Times New Roman, подчеркивание, использование жирного шрифта не рекомендуется\n  Отступы страницы: оформление отчета по практике имеет свои требования ГОСТа, которые нужно обязательно учитывать при написании отчета.\n  Левый отступ – 3 см, Правый - 2 см, Сверху и снизу – 2 см. Абзацный отступ – 1,25 см.\n Объем текста: обычно объем отчета по практике составляет 25-30 листов, однако, в отдельных случаях по согласованию с преподавателем.\n  Обязательные элементы: обязательным требованием оформления отчета является наличие в тексте сносок и цитат (внутритекстовых или постраничных), нумерации страниц, оформления заголовков.\n  Правильное оформление Для того, чтобы разобраться, как правильно оформить отчет по практике по ГОСТу 2022 года, нужно напомнить, из каких элементов он состоит. Эти компоненты очень важны при написании, а значит нужно отнестись к ним очень основательно. Отсутствие даже одного элемента может нарушить всю целостность работы.\nТут должны быть такие компоненты как: титульный лист, задание руководителя практики, план и дневник практики, отзыв или характеристика от руководителя практики введение, основное содержание, заключение, список литературы и приложения.\nТитульный лист. Можно сказать, что это лицо вашей работы, титульник должен включать в себя информацию о наименовании учреждения, виде практике, основные данные о практиканте и преподавателе.\nЗадание практики. Дается студенту преподавателем для того, чтобы он имел представление, в чем заключается его задача и какова главная цель прохождения практики.\nПлан и дневник практики. В план вносятся мероприятия, которые должны быть проведены во время практики. Дневник является настольной книгой практиканта, куда записываются все проведенные события, все полученные знания и опыт.\nОтзыв(характеристика) на студента. Небольшой текст, написанный руководителем практики, который характеризует практиканта, описывает его личные качества, профессиональные особенности, трудовые навыки.\nВведение отчета по практике – описывает основные цели, задачи прохождения практики, ее актуальность, выявляет проблему.\nОсновная часть может быть только теоретической, если речь идет об учебной практике, или состоять из 2-х частей – теории и практической части (отчет по производственной практике).\nЗаключение отчета по практике. Подводит итог всей работе, описывает практические результаты прохождения практики.\nИтак, мы разобрали в целом, как правильно оформить отчет по практике по ГОСТу 2022 года.\n","date":1653004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653004800,"objectID":"3bf6781e259c76712804b1754ae302a5","permalink":"https://example.com/post/post3/","publishdate":"2022-05-20T00:00:00Z","relpermalink":"/post/post3/","section":"post","summary":"Оформление отчета по практике  - процесс довольно сложный, ведь оно требует от студента кропотливости, терпения и усидчивости. Зная, как правильно оформить отчет, из каких компонентов он состоит и какова его структура, можно потратить совсем немного времени и получить отличную оценку в зачетку.","tags":["Academic"],"title":"Оформление отчета","type":"post"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"About My Previous Week I spent my previous week doing labs for Operating Systems and for Programming Technologies.\n","date":1652313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"7fdfbecf2aa6d94272daabda64820290","permalink":"https://example.com/post/my-week02/","publishdate":"2022-05-12T00:00:00Z","relpermalink":"/post/my-week02/","section":"post","summary":"This chapter will be about my previous week.","tags":["Academic"],"title":"About my previous week","type":"post"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"Markdown Angle brackets\nIf you use angle brackets in text in your file (for example, to denote a placeholder), you need to manually encode the angle brackets. Otherwise, Markdown thinks that they’re intended to be an HTML tag.\nFor example, encode as \u0026lt;script name\u0026gt; or \u0026lt;script name\u0026gt;.\nAngle brackets don’t have to be escaped in text formatted as inline code or in code blocks. Apostrophes and quotation marks\nIf you copy from Word into a Markdown editor, the text might contain “smart” (curly) apostrophes or quotation marks. These need to be encoded or changed to basic apostrophes or quotation marks. Otherwise, you end up with things like this when the file is published: Itâ€™s\nHere are the encodings for the “smart” versions of these punctuation marks:\nLeft (opening) quotation mark: \u0026amp;#8220; Right (closing) quotation mark: \u0026amp;#8221; Right (closing) single quotation mark or apostrophe: \u0026amp;#8217; Left (opening) single quotation mark (rarely used): \u0026amp;#8216;  Tip\nTo avoid “smart” characters in your Markdown files, rely on the Docs Authoring Pack’s smart quote replacement feature. For more information, see smart quote replacement. Blockquotes\nBlockquotes are created using the \u0026gt; character: Markdown\n This is a blockquote. It is usually rendered indented and with a different background color.\n The preceding example renders as follows:\nThis is a blockquote. It is usually rendered indented and with a different background color.  Bold and italic text\nTo format text as bold, enclose it in two asterisks: Markdown\nThis text is bold.\nTo format text as italic, enclose it in a single asterisk: Markdown\nThis text is italic.\nTo format text as both bold and italic, enclose it in three asterisks: Markdown\nThis text is both bold and italic.\nFor guidance on when to use bold and italic text, see text formatting guidelines. Code snippets\nDocs Markdown supports the placement of code snippets both inline in a sentence and as a separate “fenced” block between sentences. For more information, see How to add code to docs. Columns\nThe columns Markdown extension gives Docs authors the ability to add column-based content layouts that are more flexible and powerful than basic Markdown tables, which are only suited for true tabular data. You can add up to four columns, and use the optional span attribute to merge two or more columns.\nWhile the columns extension still works, we no longer recommend it for creating custom layouts. We’ve found that many custom column layouts have accessibility issues or otherwise violate Docs style guidelines. Don’t create custom layouts. Use standard Docs features.\nThe syntax for columns is as follows: Markdown\n:::row::: :::column span=\u0026#34;\u0026#34;::: Content… :::column-end::: :::column span=\u0026#34;\u0026#34;::: More content… :::column-end::: :::row-end:::\nColumns should only contain basic Markdown, including images. Headings, tables, tabs, and other complex structures shouldn’t be included. A row can’t have any content outside of column.\nFor example, the following Markdown creates one column that spans two column widths, and one standard (no span) column: Markdown\n:::row::: :::column span=“2”::: This is a 2-span column with lots of text.\n Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vestibulum mollis nunc ornare commodo. Nullam ac metus imperdiet, rutrum justo vel, vulputate leo. Donec rutrum non eros eget consectetur.  :::column-end::: :::column span=\u0026#34;\u0026#34;::: This is a single-span column with an image in it.\n ![Doc.U.Ment](media/markdown-reference/document.png)  :::column-end::: :::row-end:::\nThis renders as follows:\nThis is a 2-span column with lots of text.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vestibulum mollis nunc ornare commodo. Nullam ac metus imperdiet, rutrum justo vel, vulputate leo. Donec rutrum non eros eget consectetur.\nComments\nDocs supports HTML comments if you must comment out sections of your article:\nWarning\nDo not put private or sensitive information in HTML comments. Docs carries HTML comments through to the published HTML that goes public. While HTML comments are invisible to the reader’s eye, they are exposed in the HTML underneath. Headings\nDocs supports six levels of Markdown headings: Markdown\nThis is a first level heading (H1) This is a second level heading (H2) …\nThis is a sixth level heading (H6) There must be a space between the last # and heading text. Each Markdown file must have one and only one H1 heading. The H1 heading must be the first content in the file after the YML metadata block. H2 headings automatically appear in the right-hand navigating menu of the published file. Lower-level headings don\u0026#39;t appear, so use H2s strategically to help readers navigate your content. HTML headings, such as \u0026lt;h1\u0026gt;, aren\u0026#39;t recommended, and in some cases will cause build warnings. You can link to individual headings in a file via bookmark links.  HTML\nAlthough Markdown supports inline HTML, HTML isn’t recommended for publishing to Docs, and except for a limited list of values will cause …","date":1652313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"7a2935dbc30bcdd260a376f839e6bc50","permalink":"https://example.com/post/markdown/","publishdate":"2022-05-12T00:00:00Z","relpermalink":"/post/markdown/","section":"post","summary":"Markdown is a simple markup language used to create rich text (e.g. HTML) with a plain text editor. It lets you add basic formatting to your text, using symbols known and accessible on all keyboards. Font size, colour, and other, more advanced options are not available with Markdown.","tags":["Academic"],"title":"Markdown","type":"post"},{"authors":["Anastasia Baranova","吳恩達"],"categories":["Demo","教程"],"content":"About Version Control What is “version control”, and why should you care? Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. For the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.\nIf you are a graphic or web designer and want to keep every version of an image or layout (which you would most certainly want to), a Version Control System (VCS) is a very wise thing to use. It allows you to revert selected files back to a previous state, revert the entire project back to a previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more. Using a VCS also generally means that if you screw things up or lose files, you can easily recover. In addition, you get all this for very little overhead.\nLocal Version Control Systems Many people’s version-control method of choice is to copy files into another directory (perhaps a time-stamped directory, if they’re clever). This approach is very common because it is so simple, but it is also incredibly error prone. It is easy to forget which directory you’re in and accidentally write to the wrong file or copy over files you don’t mean to.\nTo deal with this issue, programmers long ago developed local VCSs that had a simple database that kept all the changes to files under revision control.\n   { #fig:001 width=70% }\nOne of the most popular VCS tools was a system called RCS, which is still distributed with many computers today. RCS works by keeping patch sets (that is, the differences between files) in a special format on disk; it can then re-create what any file looked like at any point in time by adding up all the patches.\nCentralized Version Control Systems The next major issue that people encounter is that they need to collaborate with developers on other systems. To deal with this problem, Centralized Version Control Systems (CVCSs) were developed. These systems (such as CVS, Subversion, and Perforce) have a single server that contains all the versioned files, and a number of clients that check out files from that central place. For many years, this has been the standard for version control.\n   { #fig:002 width=70% }\nThis setup offers many advantages, especially over local VCSs. For example, everyone knows to a certain degree what everyone else on the project is doing. Administrators have fine-grained control over who can do what, and it’s far easier to administer a CVCS than it is to deal with local databases on every client.\nHowever, this setup also has some serious downsides. The most obvious is the single point of failure that the centralized server represents. If that server goes down for an hour, then during that hour nobody can collaborate at all or save versioned changes to anything they’re working on. If the hard disk the central database is on becomes corrupted, and proper backups haven’t been kept, you lose absolutely everything — the entire history of the project except whatever single snapshots people happen to have on their local machines. Local VCSs suffer from this same problem — whenever you have the entire history of the project in a single place, you risk losing everything.\nDistributed Version Control Systems This is where Distributed Version Control Systems (DVCSs) step in. In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don’t just check out the latest snapshot of the files; rather, they fully mirror the repository, including its full history. Thus, if any server dies, and these systems were collaborating via that server, any of the client repositories can be copied back up to the server to restore it. Every clone is really a full backup of all the data.\n   { #fig:002 width=70% }\nFurthermore, many of these systems deal pretty well with having several remote repositories they can work with, so you can collaborate with different groups of people in different ways simultaneously within the same project. This allows you to set up several types of workflows that aren’t possible in centralized systems, such as hierarchical models.\n","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"94ea21a04d022ffd5a830d7b0567d780","permalink":"https://example.com/post/post2/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/post2/","section":"post","summary":"This chapter will be about getting started with Git. We will begin by explaining some background on version control tools, then move on to how to get Git running on your system and finally how to get it set up to start working with. At the end of this chapter you should understand why Git is around, why you should use it and you should be all set up to do so.","tags":["Academic","开源"],"title":"Git Version Control","type":"post"},{"authors":["Anastasia Baranova"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"Git Version Control","type":"publication"},{"authors":["Anastasia Baranova"],"categories":["Demo"],"content":"About my last week Hello and welcome to my site! My life last week was just the same as the previous weeks which means I was studying a lot. I’ve spend a lot of time working on my labs for Operating systems. I hope I will be able to study better and faster soon so I will have more time for the other subjects which are important too.\n","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 I know that first impressions are important, so first I will tell you about me.","tags":["Academic"],"title":"Welcome to my blog 👋","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]